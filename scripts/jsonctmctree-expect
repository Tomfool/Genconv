#! /usr/bin/env python
from __future__ import division, print_function, absolute_import

import argparse
import json
import traceback
import sys

from jsonctmctree.expect import process_json_in
from jsonctmctree.common_unpacking import SimpleError, SimpleShapeError


def main(args):
    try:
        s_in = sys.stdin.read()
        j_in = json.loads(s_in)
    except Exception as e:
        if args.debug:
            raise
        return dict(
                status = 'error',
                message = 'json parsing error: ' + traceback.format_exc())
    try:
        return process_json_in(j_in)
    except SimpleError as e:
        if args.debug:
            raise
        return dict(
                status = 'error',
                message = str(e))
    except Exception as e:
        if args.debug:
            raise
        return dict(
                status = 'error',
                message = 'processing error: ' + traceback.format_exc())


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--debug', action='store_true')
    j_out = main(parser.parse_args())
    print(json.dumps(j_out))
